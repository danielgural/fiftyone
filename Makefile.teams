SHELL := $(SHELL) -e

.PHONY: $(shell sed -n -e '/^$$/ { n ; /^[^ .\#][^ ]*:/ { s/:.*$$// ; p ; } ; }' $(MAKEFILE_LIST))

# Help
.PHONY: $(shell sed -n -e '/^$$/ { n ; /^[^ .\#][^ ]*:/ { s/:.*$$// ; p ; } ; }' $(MAKEFILE_LIST))

help:
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}' $(MAKEFILE_LIST)

.DEFAULT_GOAL := help

configure: ## Set up the development environment
	@bash scripts/configure.sh

gcloud-auth: ## Uses Gcloud CLI to login to both application-default and regular auth
	@gcloud auth login && \
		gcloud auth application-default login
		
gcloud-cp-env: ## Copy developer .env file from cloud storage
	@gcloud storage cp \
		gs://voxel51-fiftyone-ai/dev-env-files/deploy/dev/.env \
		./teams-app/.env \
		--project computer-vision-team
	@gcloud storage cp \
		gs://voxel51-fiftyone-ai/dev-env-files/deploy/dev/.env \
		./package/teams/.env \
		--project computer-vision-team
		
gcloud-cp-license: ## Copy developer license file from cloud storage
	@gcloud storage cp \
		gs://voxel51-test/licenses/org_6nvHI0NrwCmc2fXp/1/license.key \
		license.key \
		--project computer-vision-team

gcloud-cp-env-ephemeral: ## Configure ephemeral .env file from cloud storage and kubernetes
	@read -p "Namespace: " NS; \
	scripts/generate-ephemeral-env.sh $$NS

gcloud-cp-license-ephemeral: ## Copy ephemeral env license file from cloud storage
	@gcloud storage cp \
		gs://voxel51-licenses-dev/licenses/dev-internal-env/1/license.key \
		license.key \
		--project computer-vision-team

run-teams-app: ## Run the fiftyone-teams app
	@corepack enable && \
		cd app && yarn install && cd - && \
		cd teams-app && yarn install && cd - && \
		cd teams-app/packages/app && \
		yarn dev

run-embedded-api: SHELL:=$(shell echo $$SHELL)
run-embedded-api: ## Run the fiftyone-teams embedded api
	@cd package/teams && \
		if [ "$(SHELL)" = "/bin/zsh" ]; then \
			. $$HOME/.zshrc; \
		else \
			. $$HOME/.bash_profile; \
		fi && \
		pyenv shell 3.10 && \
		python -m venv .venv && \
		. ./.venv/bin/activate && \
		pip install keyrings.google-artifactregistry-auth wheel && \
		pip install --extra-index-url https://us-central1-python.pkg.dev/computer-vision-team/dev-python/simple/ --pre . && \
		. ./.env && \
		API_URL=$$API_URL \
			FIFTYONE_DATABASE_NAME=$$FIFTYONE_DATABASE_NAME \
			FIFTYONE_DATABASE_URI=$$FIFTYONE_DATABASE_URI \
			CAS_SECURE_COOKIE=$$CAS_SECURE_COOKIE \
			FIFTYONE_AUTH_SECRET=$$FIFTYONE_AUTH_SECRET \
			FIFTYONE_ENCRYPTION_KEY=$$FIFTYONE_ENCRYPTION_KEY \
			FIFTYONE_PLUGINS_DIR= \
			hypercorn fiftyone.teams.app:app --bind localhost:5151 --reload

plugins-dependencies-install: SHELL:=$(shell echo $$SHELL)
plugins-dependencies-install: ## Installs plugin dependencies such as torch into the embedded APIs venv
	@cd package/teams && \
		if [ "$(SHELL)" = "/bin/zsh" ]; then \
			. $$HOME/.zshrc; \
		else \
			. $$HOME/.bash_profile; \
		fi && \
		pyenv shell 3.10 && \
		python -m venv .venv && \
		. ./.venv/bin/activate && \
		pip install -r ../../requirements/github.txt

telepresence-install: ## Installs telepresence binary
	HOMEBREW_NO_AUTO_UPDATE=1 brew install telepresenceio/telepresence/telepresence-oss

telepresence-connect: ## Connects to the telepresence cluster using your ephemeral environment
	@kubectl config use-context gke_computer-vision-team_us-east5_voxel51-autopilot-dev-1
	@read -p "Namespace: " NS; \
	telepresence connect --manager-namespace "traffic-manager" --namespace $$NS

telepresence-tunnel-teams-app: ## Proxies localhost:3000 for the Teams-App into the remote cluster
	@scripts/telepresence-wrapper.sh teams-app --port 3000:http

telepresence-tunnel-fiftyone-app: ## Proxies localhost:5151 for the Teams-App into the remote cluster
	@scripts/telepresence-wrapper.sh fiftyone-app --port 5151:http

telepresence-clean: ## Disconnects all telepresence sessions
	@telepresence leave fiftyone-app &> /dev/null || echo "Fiftyone app already disconnected.."
	@telepresence leave teams-app &> /dev/null || echo "Teams app already disconnected..."
	@telepresence quit
